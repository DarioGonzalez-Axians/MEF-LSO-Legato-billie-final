openapi: 3.0.3
info:
  title: Legato Service API Specification - SD-WAN
  version: 1.0.0-RC
servers:
- url: /
paths: {}
components:
  schemas:
    SdWanUni:
      type: object
      properties:
        administrativeState:
          $ref: '#/components/schemas/AdministrativeState'
        operationalState:
          $ref: '#/components/schemas/OperationalState'
        uniIdentifier:
          type: string
          description: Identification of the UNI for management purposes. Reference
            MEF 70, Section 10.1 SD-WAN UNI Identifier Service Attribute.
        l2Interface:
          $ref: '#/components/schemas/L2Interface'
        maxL2FrameSize:
          type: integer
          description: Specifies the maximum length L2 frame that is accepted by the
            Service Provider. Reference MEF 70, Section 10.3 SD-WAN UNI Maximum L2
            Frame Size Service Attribute.
        ipv4ConnectionAddressing:
          $ref: '#/components/schemas/Ipv4ConnectionAddressing'
        ipv6ConnectionAddressing:
          $ref: '#/components/schemas/Ipv6ConnectionAddressing'
        swVcEndPoint:
          maxItems: 1
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/SwVcEndPoint'
      description: SdWanUni is a class that represents the boundary between the responsibility
        of the Subscriber and the responsibility of the Service Provider. Reference
        MEF 70, Section 6.4 SD-WAN UNI.
    L2Interface:
      type: object
      properties:
        l2InterfaceType:
          type: string
          description: L2InterfaceType is an enumeration that describes the underlying
            network layer that carries IP Packets across the UNI. The possible values
            are UT/PT and CVLANx. Reference MEF 70 Section 10.2.
          enum:
          - UT_PT
          - CVLANX
        vlanId:
          maxItems: 1
          minItems: 0
          type: array
          description: VLAN ID.
          items:
            type: integer
      description: L2Interface is a data type that describes the underlying network
        layer that carries IP Packets across the UNI. The possible values are UT/PT
        and CVLANx. Reference MEF 70 Section 10.2 SD-WAN UNI L2 Interface Service
        Attribute.
    Ipv4ConnectionAddressing:
      type: object
      properties:
        ipv4AddressType:
          type: string
          description: IPv4 Connection Address mechanism. Possible values are None,
            Static or DHCP.
          enum:
          - DHCP
          - STATIC
        ipv4PrimarySubnet:
          maxItems: 1
          minItems: 0
          type: array
          description: Primary IPv4 Subnet. Includes IPv4 Prefix and Service Provider
            IPv4 Addresses.
          items:
            $ref: '#/components/schemas/Ipv4Subnet'
        ipv4SecondarySubnetList:
          minItems: 0
          type: array
          description: Secondary IPv4 Subnet List. Includes IPv4 Prefix and Service
            Provider IPv4 Addresses.
          items:
            $ref: '#/components/schemas/Ipv4Subnet'
      description: Ipv4ConnectionAddressing is a data type representing how IPv4 addresses
        are allocated to the devices on the Subscriber side of the UNI. For DHCP and
        Static the Primary Subnet and Secondary Subnet List must be included. Reference
        MEF 70 Section 10.4 SD-WAN UNI IPv4 Connection Addressing Service Attribute.
    Ipv4Subnet:
      type: object
      properties:
        ipv4Prefix:
          $ref: '#/components/schemas/Ipv4Prefix'
        serviceProviderIpv4Addresses:
          minItems: 1
          type: array
          description: List of Service Provider IPv4 addresses.
          items:
            type: string
      description: Ipv4Subnet is a data type representing an IPv4 subnet logical partition
        of an IP network. Included is list of Service Provider IPv4 addresses.
    Ipv4Prefix:
      type: object
      properties:
        ipv4Address:
          type: string
          description: IPv4 address represented as a string.
        prefixLength:
          type: integer
          description: IPv4 prefix length with range 0-31.
      description: Ipv4Prefix is a data type representing an IPv4 prefix using slash
        notation.
    Ipv6ConnectionAddressing:
      type: object
      properties:
        ipv6AddressType:
          type: string
          description: IPv6 Connection Address mechanism. Possible values are None,
            DHCP, SLAAC, Static or LL-only.
          enum:
          - DHCP
          - SLAAC
          - STATIC
          - LL_ONLY
        ipv6SubnetList:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Ipv6Subnet'
      description: IPv6ConnectionAddressing is a data type that specifies how IPv6
        addresses are allocated to the devices on the Subscriber side of the UNI.
        For DHCP, SLAAC and Static, IPv6 Prefix and Service Provider IPv6 Addresses
        are needed. Reference MEF 70 Section 10.5 SD-WAN UNI IPv6 Connection Addressing
        Service Attribute.
    Ipv6Subnet:
      type: object
      properties:
        ipv6Prefix:
          $ref: '#/components/schemas/Ipv6Prefix'
        serviceProviderIpv6Addresses:
          minItems: 1
          type: array
          description: List of IPv6 Service Provider addresses.
          items:
            type: string
      description: IPv6Subnet is a data type representing an IPv6 subnet logical partition
        of an IP network. Included is list of Service Provider IPv6 addresses.
    Ipv6Prefix:
      type: object
      properties:
        ipv6Address:
          type: string
          description: IPv6 address represented as a string.
        prefixLength:
          type: integer
          description: IPv6 prefix length.
      description: Ipv6Prefix is a data type representing an IPv6 prefix using slash
        notation.
    SwVcEndPoint:
      type: object
      properties:
        administrativeState:
          $ref: '#/components/schemas/AdministrativeState'
        operationalState:
          $ref: '#/components/schemas/OperationalState'
        endPointIdentifier:
          maxLength: 45
          type: string
          description: Identfication of the SWVC End Point for management purposes.
            Reference MEF 70 Section 9.1 SWVC End Point Identifier Service Attribute.
        policyMap:
          minItems: 0
          type: array
          description: Maps Policies to Application Flows and Application Flow Groups.
            Reference MEF 70 Section 9.3 SWVC End Point Policy Map.
          items:
            $ref: '#/components/schemas/PolicyMap'
        sdWanUni:
          $ref: '#/components/schemas/SdWanUniRef'
      description: SwVcEndPoint is a class that represents a logical construct at
        an SD-WAN UNI that partitions Ingress IP Packets into Applications, applies
        Policy to each IP Packet based on the associated Application, and selets an
        appropriate path to transport the IP Packet over the SWVC. Reference MEF 70,
        Section 9 SD-WAN Virtual Connection (SWVC) End Point.
    Swvc:
      type: object
      properties:
        administrativeState:
          $ref: '#/components/schemas/AdministrativeState'
        operationalState:
          $ref: '#/components/schemas/OperationalState'
        swVcIdentifier:
          type: string
          description: Identification of the SWVC for management purposes. Reference
            MEF 70, Section 8.1.
        swVcEndPointList:
          minItems: 2
          type: array
          description: The SWVC End Point that are connected by the SWVC. Reference
            MEF 70 Section 8.2 SWVC End Point List Service Attribute.
          items:
            $ref: '#/components/schemas/SwVcEndPoint'
        serviceUptimeObjective:
          $ref: '#/components/schemas/ServiceUptimeObjective'
        ipv4ReservedPrefixes:
          minItems: 0
          type: array
          description: Specifies a list of IPv4 Prefixes that the Service Provider
            reserves for use for the SWVC within their own network or for distribution
            to the Subscriber via DHCP. Reference MEF 70 Section 8.4 SWVC Reserved
            Prefixes Service Attribute.
          items:
            $ref: '#/components/schemas/Ipv4Prefix'
        ipv6ReservedPrefixes:
          minItems: 0
          type: array
          description: Specifies a list of IPv6 Prefixes that the Service Provider
            reserves for use for the SWVC within their own network or for distribution
            to the Subscriber via DHCP or SLAAC. Reference MEF 70 Section 8.4 SWVC
            Reserved Prefixes Service Attribute.
          items:
            $ref: '#/components/schemas/Ipv6Prefix'
        listOfPolicies:
          minItems: 1
          type: array
          description: A list of the Policies that can be applied to Application Flows
            carried by the SWVC End Points. Reference MEF 10.4 Section 8.5 SWVC List
            of Policies Service Attribute.
          items:
            $ref: '#/components/schemas/Policy'
        listOfApplicationFlows:
          minItems: 1
          type: array
          description: Specifies the Application Flows that can be recognized by the
            SD-WAN service and information about how to identify IP packets in each
            Application Flow. Reference MEF 70 Section 8.7 SWVC List of Application
            Flows Service Attribute.
          items:
            $ref: '#/components/schemas/ApplicationFlow'
        listOfApplicationFlowGroups:
          minItems: 0
          type: array
          description: A list (possibly empty) of Application Flow Group names. Reference
            MEF 70 Section 8.6 SWVC List of Application Flow Groups Service Attribute.
          items:
            $ref: '#/components/schemas/ApplicationFlowGroup'
      description: Swvc is a class that represents a SD-WAN Virtual Connection. Reference
        MEF 70 Section 6.8 SD-WAN Virtual Connection.
    PolicyMap:
      type: object
      properties:
        applicationFlow:
          maxItems: 1
          minItems: 0
          type: array
          description: Pointer to Application Flow.
          items:
            $ref: '#/components/schemas/ApplicationFlow'
        applicationFlowGroup:
          maxItems: 1
          minItems: 0
          type: array
          description: Pointer to Application Flow Group.
          items:
            $ref: '#/components/schemas/ApplicationFlowGroup'
        policy:
          $ref: '#/components/schemas/Policy'
      description: Specifies the Policies that are assigned to Application Flows and
        Application Flow Groups at the SWVC End Point. Reference MEF 70 Section 9.3
        SWVC End Point Policy Map.
    Policy:
      type: object
      properties:
        polName:
          type: string
          description: An identifier String that specifies the name of Policy. polName
            cannot be 'block'.
        policyCriteria:
          $ref: '#/components/schemas/PolicyCriteria'
        serviceProviderPolicyCriterion:
          minItems: 0
          type: array
          description: Pointer to Service Provider Policy Criteria.
          items:
            $ref: '#/components/schemas/ServiceProviderPolicyCriterion'
      description: Policy that has Policy Name (polName) and Policy Criterion (polCl).
        A Policy is a list of Policy Criteria. Policies are assigned to Application
        Flows and Application Flow Groups at each SWVC End Point.
    PolicyCriteria:
      type: object
      properties:
        internetBreakout:
          maxItems: 1
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/InternetBreakout'
        encyrption:
          maxItems: 1
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Encryption'
        publicPrivate:
          maxItems: 1
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/PublicPrivate'
        billingMethod:
          maxItems: 1
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/BillingMethod'
        backUp:
          maxItems: 1
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        bandwidthPolicyCriterion:
          maxItems: 1
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/BandwidthPolicyCriterion'
      description: PolicyCriteria is a class representing listed name Policies that
        can be applied to Application Flows and Application Flow Groups at SWVC End
        Points.  Reference MEF 70 Section 8.5 SWVC List of Policies Service Attribute.
    InternetBreakout:
      type: string
      description: Represents a Policy Criterion indicating whether the Application
        Flow should be forwarded directly to the Internet using Internet Breakout.
        Reference MEF 70 Section 8.5.4 INTERNET-BREAKOUT Policy Criterion.
      enum:
      - "YES"
      - "NO"
    Encryption:
      type: string
      description: Represents a Policy Criterion used to specify whether or not encryption
        is required. Reference MEF 70 Section 8.5.2 ENCRYPTION Policy Criterion.
      enum:
      - "YES"
      - EITHER
    PublicPrivate:
      type: string
      description: Represents a Policy Criterion that provides control over whether
        or not an Application Flow can traverse a public Internet Underlay Connectivity
        Service. Reference MEF 70 Section 8.5.3 PUBLIC-PRIVATE Policy Criterion.
      enum:
      - PRIVATE_ONLY
      - EITHER
    BillingMethod:
      type: string
      description: Represents a Policy Criterion that provides control over the charge
        type of the network that can be used to forward an Application Flow. Reference
        MEF 70 Section 8.5.5 BILLING-METHOD Policy Criterion.
      enum:
      - FLAT_RATE_ONLY
      - EITHER
    Backup:
      type: string
      description: Represents a Policy Criterion when at least one non-Backup UCS
        available at an SD-WAN Edge. Reference MEF 70 Section 8.5.6 BACKUP Policy
        Criterion.
      enum:
      - "YES"
      - "NO"
    BandwidthPolicyCriterion:
      type: object
      properties:
        commit:
          maxItems: 1
          minItems: 0
          type: array
          description: Average information rate in bits per second that is committed
            to the Application Flow or none. Reference MEF 70 Section 8.5.7.
          items:
            type: integer
        max:
          maxItems: 1
          minItems: 0
          type: array
          description: Limit on the average information rate in bits per second that
            can be used by the Application Flow or none.  Reference MEF 70 Section
            8.5.7.
          items:
            type: integer
      description: BandwidthPolicyCriterion is a data type that specifies a rate (bandwidth)
        limit on an Application Flow or Application Flow Group. Reference MEF 70 Section
        8.5.7 BANDWIDTH Policy Criterion.
    ServiceProviderPolicyCriterion:
      type: object
      properties:
        policyCriteria:
          minItems: 1
          type: array
          items:
            type: string
      description: Abstract class representing Service Provider defined policy criteria
        in form of <pcName,pcParam>. Reference MEF 70 Section 8.5 SWVC List of Policies
        Service Attribute.
    ServiceUptimeObjective:
      type: object
      properties:
        startTime:
          $ref: '#/components/schemas/TimeAndDate'
        period:
          $ref: '#/components/schemas/Period'
        uptimeObjective:
          maximum: 100
          minimum: 0
          type: integer
          description: Objective for Service Uptime expressed as a percentage.
      description: ServiceUptimeObject is a data type that represents the SWVC service
        up time objective. It defines that proportion of time, during a given time
        period Tk, that the service is working from the perspective of the Subscriber,
        excluding an pre-agreed exceptions. Reference MEF 70 Section 8.3 SWVC Service
        Uptime Objective Service Attribute.
    ApplicationFlow:
      type: object
      properties:
        appName:
          type: string
          description: Identifier String that is used to refer to Application Flow.
        applicationFlowCriteria:
          $ref: '#/components/schemas/ApplicationFlowCriteria'
      description: A subset of the IP packets that arrive at an Ingress SD-WAN UNI,
        identified by a set of Application Flow Criteria, and distinct from the subset
        for any other Application Flow at that SD-WAN UNI. Reference MEF 70 Table
        1-Terminology and Abbreviations.
    ApplicationFlowGroup:
      type: object
      properties:
        name:
          type: string
          description: Application Flow Group name.
        applicationFlows:
          minItems: 0
          type: array
          description: Associated Application Flows.
          items:
            $ref: '#/components/schemas/ApplicationFlow'
      description: An aggregation of Application Flows at an SD-WAN UNI that can be
        used to assign a common Policy to the Application Flows and/or share bandwidth
        commitments and limitations amoung Application Flows. Reference MEF 70 Table
        1-Terminology and Abbreviations.
    ApplicationFlowCriteria:
      type: object
      properties:
        ethertype:
          maxItems: 1
          minItems: 0
          type: array
          description: Ethertype. Integer in the range 0x600 to 0xffff. Reference
            MEF 70 Section 8.7 Table-4 Required Application Flow Criteria.
          items:
            type: integer
        cVlans:
          minItems: 0
          type: array
          description: C-VLAN ID List. Integer in range 0 to 4096. Reference MEF 70
            Section 8.7 Table-4 Required Application Flow Criteria.
          items:
            maximum: 4094
            minimum: 0
            type: integer
        ipv4SourceAddress:
          maxItems: 1
          minItems: 0
          type: array
          description: IPv4 Source Address. Reference MEF 70 Section 8.7 Table-4 Required
            Application Flow Criteria.
          items:
            $ref: '#/components/schemas/Ipv4Prefix'
        ipv4DestinationAddress:
          maxItems: 1
          minItems: 0
          type: array
          description: IPv4 Destination Address. Reference MEF 70 Section 8.7 Table-4
            Required Application Flow Criteria.
          items:
            $ref: '#/components/schemas/Ipv4Prefix'
        ipv4SourceOrDestinationAddress:
          maxItems: 1
          minItems: 0
          type: array
          description: IPv4 Source or Destination Address. Reference MEF 70 Section
            8.7 Table-4 Required Application Flow Criteria.
          items:
            $ref: '#/components/schemas/Ipv4Prefix'
        ipv4ProtocolList:
          type: array
          description: IPv4 Destination Address. Reference MEF 70 Section 8.7 Table-4
            Required Application Flow Criteria.
          items:
            maximum: 255
            minimum: 0
            type: integer
        ipv6SourceAddress:
          maxItems: 1
          minItems: 0
          type: array
          description: IPv6 Source Address. Reference MEF 70 Section 8.7 Table-4 Required
            Application Flow Criteria.
          items:
            $ref: '#/components/schemas/Ipv6Prefix'
        ipv6DestinationAddress:
          maxItems: 1
          minItems: 0
          type: array
          description: IPv6 Destination Address. Reference MEF 70 Section 8.7 Table-4
            Required Application Flow Criteria.
          items:
            $ref: '#/components/schemas/Ipv6Prefix'
        ipv6SourceOrDestinationAddress:
          maxItems: 1
          minItems: 0
          type: array
          description: IPv6 Source or Destination Address. Reference MEF 70 Section
            8.7 Table-4 Required Application Flow Criteria.
          items:
            $ref: '#/components/schemas/Ipv6Prefix'
        nextHeadV6:
          minItems: 0
          type: array
          description: IPv6 Next Header List. Reference MEF 70 Section 8.7 Table-4
            Required Application Flow Criteria.
          items:
            maximum: 255
            minimum: 0
            type: integer
        tcpUdpSourcePortList:
          minItems: 0
          type: array
          description: TCP/UDP Source Port List. Reference MEF 70 Section 8.7 Table-4
            Required Application Flow Criteria.
          items:
            maximum: 65535
            minimum: 0
            type: integer
        tcpUdpDestinationPortList:
          minItems: 0
          type: array
          description: TCP/UDP Destination Port List. Reference MEF 70 Section 8.7
            Table-4 Required Application Flow Criteria.
          items:
            maximum: 65535
            minimum: 0
            type: integer
        tcpUdpSourceOrDestinationPortList:
          minItems: 0
          type: array
          description: TCP/UDP Source or Destination Port List. Reference MEF 70 Section
            8.7 Table-4 Required Application Flow Criteria.
          items:
            maximum: 65535
            minimum: 0
            type: integer
        any:
          type: boolean
          description: Match Any IP Packet. Reference MEF 70 Section 8.7 Table-4 Required
            Application Flow Criteria.
        applicationIdentifier:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/ApplicationIdentifier'
      description: ApplicationFlowCriterion is a class used to describe Application
        Flow MUST include the Criteria. Reference MEF 70 Section 8.7 SWVC List of
        Application Flows Service Attribute [R46] Table 4 - Required Application Flow
        Criteria.
    ApplicationIdentifier:
      type: object
      properties:
        appId:
          type: string
          description: Application Identfier as a String. Reference MEF 70 Section
            8.7 [R47].
      description: Abstract class intended to be extended (subclassed) to Service
        Provider defined Application Identifier. Reference MEF 70 Section 8.7 Table-4
        Required Application Flow Criteria.
    AdministrativeState:
      type: string
      description: MEF Core Model (MCM) defined Administraive State.
      readOnly: true
      enum:
      - ERROR
      - INIT
      - ENABLED_FOR_USE
      - LOCKED
      - IN_TEST
      - UNKNOWN
    OperationalState:
      type: string
      description: |-
        MEF Core Model (MCM) defined Operational State.
        * INSTALLED_AND_NOT_OPERATING_CORRECTLY means that the object installed but has one or more pending alarms that have not been cleared.
        * INSTALLED_BUT_NOT_OPERATING means that the object is in a shutdown, powered-off, or similar state.
        * IN_TEST means that the object can only respond to testing commands and communications.
        * LOCKED means that the object is prohibited from being used.
        * UNKNOWN means that this object was unable to report its status when communication was last attempted.
      readOnly: true
      enum:
      - ERROR
      - INIT
      - INSTALLED_AND_OPERATING_CORRECTLY
      - INSTALLED_AND_NOT_OPERATING_CORRECTLY
      - INSTALLED_BUT_NOT_OPERATING
      - NOT_INSTALLED
      - IN_TEST
      - LOCKED
      - UNKNOWN
    Period:
      type: object
      properties:
        value:
          minimum: 0
          type: integer
          description: Time value represented as an integer.
        units:
          $ref: '#/components/schemas/TimeUnits'
      description: Data type for Time and Date in UTC. Reference MEF-Types.
    TimeAndDate:
      type: object
      properties:
        day:
          type: integer
          description: This denotes the day.
        hour:
          type: integer
          description: This denotes the hour.
        minute:
          type: integer
          description: This denotes the minute.
        month:
          type: integer
          description: This denotes the month.
        second:
          type: integer
          description: This denotes the second.
        year:
          type: integer
          description: This denotes the year.
      description: Data type for Time and Date in UTC. Reference MEF-Types.
    TimeUnits:
      type: string
      description: TimeUnits is an enumeration representing time units.
      readOnly: true
      enum:
      - MINUTE
      - HOUR
      - DAY
      - WEEK
      - MONTH
      - YEAR
    SdWanUniRef:
      description: Reference to a Service instance.
      allOf:
      - $ref: '#/components/schemas/ApiEntityRef'
      - type: object
        properties:
          '@type':
            type: string
            default: SdWanUni
    ApiEntityRef:
      description: The base class of all Legato API Entities
      allOf:
      - $ref: '#/components/schemas/ApiEntityType'
      - required:
        - id
        type: object
        properties:
          id:
            type: string
            description: |-
              Unique identifier of an instance of this entity. The ID is
              invariant and is assigned by SOF. In other words this entity
              will have the same ID throught its lifetime.
          href:
            type: string
            description: URI reference of an object instance of this entity class.
            format: uri
    ApiEntityType:
      required:
      - '@type'
      type: object
      properties:
        '@type':
          type: string
          description: The class type of an instance of Api Entity (REST resource).
      description: |-
        The metadata that describes the class type of the API Entity (REST
        resource) instance.
