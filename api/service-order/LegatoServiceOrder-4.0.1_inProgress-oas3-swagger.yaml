openapi: 3.0.0
info:
  description: " **Legato Service Order Management**\n\nThe intent of this API is to provide a consistent/standardized mechanism to manipulate the Service instances (and in turn the Service fulfillment) through Service Orders. The Service Order API can be invoked by the Business Applications (BA) systems to initiate Service Orders that manipulate the Service fulfillment process by the Service Orchestration Function (SOF).\n\nThe scope of this API introduces the following capabilities to the API:\n\n•\tADD: Request a new Service\n\n•\tMODIFY: Change an existing Service\n\n•\tDELETE:  Delete an existing Service\n\n•\tNO_CHANGE:\n\n•\tSupport for Service Order Notifications\n\n•\tThe client could also retrieve a single, or set, of Service Orders based upon a specified filter."
  version: 4.0.1_inProgress-oas3
  title: Legato API Service Order
  x-logo:
    url: /redoc/logo.png
    backgroundColor: '#FFFFFF'
tags:
  - name: ServiceOrder
    description: provided by NBI
  - name: Notification
    description: 'provided by subscribers, which MUST registered by creating a hub resource'
paths:
  /serviceOrder:
    post:
      tags:
        - ServiceOrder
      operationId: serviceOrderCreate
      summary: Create a service order
      description: 'This operation creates a Service Order instance in the Service Order management system maintained by the SOF. A Service Order is used to request operations on a Service instance. A Service Order groups one or more one Service Order Items - one per specific action on a Service instance. The Action associated with the Service Order Item describes the operation (add, remove, update) to be applied on the specified Service instance. The Service Order Item and its associated Action can operate on both existing (remove, update) as well as future (add) Service instance. The Service Order is triggered from the Business Application (BA) system in charge of the Product Order management to the Service Orchestration Function (SOF) system that will orchestrate the Service fulfillment. The assumption is that the Service Specifications describing the Service instance in the Service Order Item are already available (to both BA & SOF). If an exception is encountered, then appropriate returnCode and error information is populated and returned as specified.'
      deprecated: false
      parameters:
        - name: Target
          required: false
          in: header
          description: ''
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ServiceOrder'
        '400':
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '401':
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '403':
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '404':
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '405':
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '408':
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '422':
          description: |-
            Unprocessable entity

            Functional error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '500':
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '503':
          description: |+
            Service Unavailable

          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CreateServiceOrder'
        required: true
    get:
      tags:
        - ServiceOrder
      operationId: serviceOrderFind
      summary: List service orders
      description: 'This operation returns a list of Service Order instances matching the query parameters from the Service Order management system maintained by the SOF. Attribute selection is possible using the ''fields'' parameter to filter retrieved attribute(s) for each Service Order instance. If an exception is encountered, then appropriate returnCode and error information is populated and returned as specified.'
      deprecated: false
      parameters:
        - name: externalId
          required: false
          in: query
          description: Filter by externalId
          schema:
            type: string
        - name: state
          required: false
          in: query
          description: State of the order(s) to be retrieved
          schema:
            type: string
        - name: description
          required: false
          in: query
          description: ''
          schema:
            type: string
        - name: orderDate.gt
          required: false
          in: query
          description: order date greather than
          schema:
            type: string
        - name: orderDate.lt
          required: false
          in: query
          description: order date lower than
          schema:
            type: string
        - name: fields
          required: false
          in: query
          description: this attribute could be used to filter retrieved attribute(s) and/or sort SO.
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The index of the first element to retrieve. Zero is the first element of the collection.
          schema:
            type: integer
            format: int32
        - name: limit
          required: false
          in: query
          description: The maximum number of elements to retrieve (it can be greater than the actual available number of items).
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Ok
          headers:
            X-Total-Count:
              description: ''
              schema:
                type: integer
                format: int32
            X-Result-Count:
              description: ''
              schema:
                type: integer
                format: int32
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOrder'
        '400':
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '401':
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '403':
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '404':
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '405':
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '408':
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '422':
          description: |-
            Unprocessable entity

            Functional error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '500':
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
        '503':
          description: |+
            Service Unavailable

          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorRepresentation'
  '/serviceOrder/{id}':
    get:
      tags:
        - ServiceOrder
      operationId: serviceOrderGet
      summary: Retrieve a service order
      description: 'This operation retrieves a Service Order instance identified by the Id parameter from the Service Order managment system maintained by the SOF. Attribute selection is possible using the ''fields'' parameter to filter retrieved attribute(s) for the returned Service Order instance. If an exception is encountered, then appropriate returnCode and error information is populated and returned as specified.'
      deprecated: false
      parameters:
        - name: id
          required: true
          in: path
          description: ''
          schema:
            type: string
        - name: fields
          required: false
          in: query
          description: Attribute selection
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ServiceOrder'
  /notification:
    post:
      tags:
        - Notification
      operationId: notificationCreate
      summary: NBI will send notification to this operation provided by subscribers
      description: |-


        List of available subscription for serviceOrdering notifications, see /notification resources for more information:

        - ServiceOrderCreationNotification
        - ServiceOrderStateChangeNotification
        - ServiceOrderItemStateChangeNotification.Notification structure depends of the eventType:

        - ServiceOrderCreationNotification
        - ServiceOrderStateChangeNotification

        ```
        {
          "eventId": "string",
          "eventDate": "2019-03-12T16:21:27.530Z",
          "eventType": "string",
          "event": {
            "id": "string",
            "href": "string",
            "externalId": "string",
            "state": "acknowledged",
            "orderDate": "2019-03-12T16:21:27.530Z",
            "completionDateTime": "2019-03-12T16:21:27.530Z"
          }
        }
        ```

        - ServiceOrderItemStateChangeNotification

        ```
        {
          "eventId": "string",
          "eventDate": "2019-03-12T16:21:44.066Z",
          "eventType": "string",
          "event": {
            "id": "string",
            "href": "string",
            "externalId": "string",
            "state": "acknowledged",
            "orderDate": "2019-03-12T16:21:44.066Z",
            "completionDateTime": "2019-03-12T16:21:44.066Z",
            "orderItem": [
              {
                "id": "string",
                "action": "add",
                "state": "acknowledged",
                "service": {
                  "id": "string",
                  "href": "string",
                  "name": "string",
                  "serviceState": "string",
                  "serviceCharacteristic": [
                    {
                      "name": "string",
                      "valueType": "string",
                      "value": {
                        "serviceCharacteristicValue": "string"
                      }
                    }
                  ],
                  "serviceRelationship": [
                    {
                      "type": "reliesOn"
                    }
                  ],
                  "relatedParty": [
                    {
                      "id": "string",
                      "href": "string",
                      "role": "string",
                      "name": "string",
                      "@referredType": "string"
                    }
                  ],
                  "serviceSpecification": {
                    "id": "string",
                    "href": "string",
                    "name": "string",
                    "version": "string",
                  }
                }
              }
            ]
          }
        }
        ```
      deprecated: false
      parameters:
        - name: Target
          required: false
          in: header
          description: ''
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Notification'
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
    get:
      tags:
        - Notification
      operationId: notificationFind
      summary: NBI will send notification to this operation provided by subscribers
      description: ''
      deprecated: false
      parameters:
        - name: Target
          required: false
          in: header
          description: ''
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Notification'
  '/notification/{notificationId}':
    delete:
      tags:
        - Notification
      operationId: notificationDelete
      summary: Delete Notification
      description: Delete Notification
      deprecated: false
      parameters:
        - name: notificationId
          required: true
          in: path
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: Ok
          headers:
            X-Total-Count:
              description: ''
              schema:
                type: integer
                format: int32
            X-Result-Count:
              description: ''
              schema:
                type: integer
                format: int32
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOrder'
servers:
  - url: 'http://localhost:8080/nbi/api/v4'
components:
  schemas:
    ActionType:
      description: Action type to be describer on the order item.
      type: string
      enum:
        - ADD
        - MODIFY
        - DELETE
        - NO_CHANGE
    ServiceOrderState:
      description: List of possible state for the Service Order.
      type: string
      enum:
        - ACKNOWLEDGED
        - IN_PROGRESS
        - PENDING
        - HELD
        - CANCELLED
        - COMPLETED
        - FAILED
        - PARTIAL
        - REJECTED
    ServiceState:
      description: List of possible state for the Service.
      type: string
      enum:
        - FEASIBILITY_CHECKED
        - DESIGNED
        - RESERVED
        - ACTIVE
        - INACTIVE
        - TERMINATED
    ServiceSpecificationState:
      description: List of possible state for the Service Specification.
      type: string
      enum:
        - DISTRIBUTION_APPROVED
        - DISTRIBUTION_NOT_APPROVED
        - DISTRIBUTION_REJECTED
        - DISTRIBUTED
        - RETIRED
    DistributionStatus:
      description: List of possible state for the Distribution Status.
      type: string
      enum:
        - NOT_CERTIFIED_CHECKOUT
        - NOT_CERTIFIED_CHECKIN
        - READY_FOR_CERTIFICATION
        - CERTIFICATION_IN_PROGRESS
        - CERTIFIED
        - REJECTED
    ApiEntityMetaData:
      description: |-
        Linked order to the one containing this attribute.
        This relationship is not used to sort ONAP request.
      required:
        - id
      type: object
      properties:
        '@type':
          type: array
          items:
            type: string
          minItems: 0
          maxItems: 1
        '@baseType':
          type: array
          items:
            type: string
          minItems: 0
          maxItems: 1
        '@schemaLocation':
          type: array
          items:
            type: string
          minItems: 0
          maxItems: 1
    RelationshipType:
      description: |-
        Relationship type;
        Only reliesOn is managed in Beijing release.
      type: string
      enum:
        - reliesOn
    EventType:
      description: ''
      type: string
      enum:
        - ServiceOrderCreationNotification
        - ServiceOrderStateChangeNotification
        - ServiceOrderItemStateChangeNotification
    SeverityMessage:
      description: ''
      type: string
      enum:
        - information
        - error
    ErrorRepresentation:
      description: ''
      required:
        - code
        - reason
      type: object
      properties:
        code:
          description: Application related code (as defined in the API or from a common list)
          type: integer
          format: int32
        reason:
          description: Text that explains the reason for error. This can be shown to a client user.
          type: string
        message:
          description: Text that provide more details and corrective actions related to the error. This can be shown to a client user
          type: string
        status:
          description: http error code extension like 400-2
          type: string
        referenceError:
          description: url pointing to documentation describing the error
          type: string
    ServiceRelationship:
      description: |-
        Linked Services to the one instantiate
        nbi component used this relationship to sort request to ONAP.
      required:
        - type
        - service
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RelationshipType'
        service:
          $ref: '#/components/schemas/Service'
    RelatedParty:
      description: "A related party defines party which are involved in this order and the role they are playing.\nfor Beijing release:\nWith the current version of APIs used from SO and AAI we need to manage a ‘customer’. This customer concept is confusing with Customer BSS concept. We took the following rules to manage the ‘customer’ information:\no\tIt could be provided through a serviceOrder in the service Order a relatedParty with role ‘ONAPcustomer’ should be provided in the serviceOrder header (we will not consider in this release the party at item level); External API component will check if this customer exists and create it in AAI if not.\no\tIf no relatedParty are provided the service will be affected to ‘generic’ customer (dummy customer) – we assume this ‘generic’ customer always exists."
      required:
        - id
        - role
      type: object
      properties:
        id:
          description: Unique identifier of a related party
          type: string
        href:
          description: An hyperlink to the party - not used in Beijnig release
          type: string
        role:
          description: |-
            The role of the related party (e.g. Owner, requester, fullfiller etc).
            ONLY 'ONAPcustomer' is considered
          type: string
        name:
          description: Name of the related party
          type: string
        '@referredType':
          description: ''
          type: string
    Service:
      description: 'Service offers the ability to describe the characteristics of an instance of specific type of service. The Business Application (BA) triggers the Service Orchestration Function (SOF) to create/update/delete a Service via the Service Order/Service Order Item operations. The SOF is responsible for orchestrating the Service fulfillment and maintaining Service instance state/attributes and notifying BA of any changes. Functionally, a Service is instantiated using a related Service Specification instance as its template. Thus the Services that share the same Service Specification instance would therefore share the same set of characteristics. The MEF Service classes that describe a specific type of MEF Service instance will be associated with the Service Specification class, as well as the Service instances will contain a reference to the MEF Service schema.The assumption is that the Service Specifications describing the Service instance in the Service Order Item are already available (to both BA & SOF).'
      required:
        - id
      type: object
      properties:
        type:
          description: Type of the service - TBD – e.g. OrderedService or PartnerService.
          type: string
        state:
          $ref: '#/components/schemas/ServiceState'
        hasStarted:
          description: 'This attribute if TRUE, indicates that this Service has already been started. If the value of this attribute is FALSE, then this signifies that this Service has NOT been Started.'
          type: boolean
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        supportingResource:
          type: array
          items:
            $ref: '#/components/schemas/SupportingResource'
        supportingSpecification:
          type: array
          items:
            $ref: '#/components/schemas/ServiceSpecification'
        serviceRelationship:
          $ref: '#/components/schemas/ServiceRelationship'
    ServiceSpecification:
      description: 'ServiceSpecification offers the ability to describe the characteristics of a specific type of service. Functionally, it acts as a template by which Services may be instantiated. By sharing the same specification, these services would therefore share the same set of characteristics. The MEF Service classes describe a specific type of MEF Service will be associated with this class via a <specify> stereotype to enable generation of specification characteristics (via tooling or otherwise).'
      type: object
      properties:
        version:
          description: Service specification version.
          type: string
        category:
          description: The category is used to group service specifications in logical containers. Categories can be further sub-categorized into other categories.
          type: string
        subcategory:
          description: Categories can be further sub-categorized into other categories.
          type: string
        lifecycleStatus:
          $ref: '#/components/schemas/ServiceSpecificationState'
        distributionStatus:
          $ref: '#/components/schemas/DistributionStatus'
        attachment:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
          minItems: 0
          maxItems: 1
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        targetServiceSchema:
          type: array
          items:
            $ref: '#/components/schemas/ApiEntityMetaData'
          minItems: 0
          maxItems: 1
    Attachment:
      description: 'An attchment represents a file that is used to complement the description of an entity through video, pictures, etc..'
      type: object
      properties:
        id:
          description: Unique identifier of an instance of this entity.
          type: string
        name:
          description: Name of an object instance of this entity class..
          type: string
    SupportingResource:
      description: Provides reference to the Resource supporting the Service instance.
      type: object
      properties:
        id:
          description: Unique identifier of an instance of this entity.
          type: string
        role:
          description: Role provide by SupportingResource.
          type: string
        href:
          description: URI reference of an object instance of this entity class.
          type: string
        name:
          description: Name of an object instance of this entity class..
          type: string
    OrderItemRelationship:
      description: 'Reference to an related Service Order Item and the type of association. The type of related Service Order Item, can be : ''dependency'' if this Order Item needs to be ''not started'' until another order item is complete, ''relies-on'' if this Order Item relies on the related order item or simply “cross-ref” to keep track of the source Order Item.'
      required:
        - type
        - id
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RelationshipType'
        id:
          description: Unique identifier of an order item
          type: string
    ServiceOrderItem:
      description: An identified part of the order. A service order is decomposed into one or more order items.
      required:
        - id
        - service
      type: object
      properties:
        id:
          description: 'Identifier of the line item (generally it is a sequence number 01, 02, 03, …)'
          type: string
        action:
          $ref: '#/components/schemas/ActionType'
        state:
          $ref: '#/components/schemas/ServiceOrderState'
        percentProgress:
          description: Progress of the delivery in percentage.
          type: string
        '@type':
          description: ''
          type: string
        '@schemaLocation':
          description: ''
          type: string
        '@baseType':
          description: ''
          type: string
        orderItemRelationship:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemRelationship'
        service:
          $ref: '#/components/schemas/Service'
        orderItemMessage:
          type: array
          items:
            $ref: '#/components/schemas/OrderMessage'
    ServiceOrder:
      description: 'A Service Order is used to request operations on a Service instance. A Service Order groups one or more one Service Order Items - one per specific action on a Service instance. The Action associated with the Service Order Item describes the operation (add, remove, update) to be applied on the specified Service instance.The Service Order Item and its associated Action can operate on both existing (remove, update) as well as future (add) Service instance.The Service Order is triggered from the Business Application (BA) system in charge of the Product Order management to the Service Orchestration Function (SOF) system that will orchestrate the Service fulfillment.The assumption is that the Service Specifications describing the Service instance in the Service Order Item are already available (to both BA & SOF).'
      required:
        - id
      type: object
      properties:
        id:
          description: ID created on repository side
          type: string
        href:
          description: Hyperlink to access the order
          type: string
        externalId:
          description: ID given by the consumer and only understandable by him (to facilitate his searches)
          type: string
        priority:
          description: 'A way that can be used by consumers to prioritize orders in Service Order Management system (from 0 to 4 : 0 is the highest priority, and 4 the lowest)'
          type: string
        description:
          description: A free-text description of the service order
          type: string
        category:
          description: 'Used to categorize the order that can be useful for the OM system (e.g. “broadband”, “TVOption”, ...)'
          type: string
        state:
          $ref: '#/components/schemas/ServiceOrderState'
        orderDate:
          description: ''
          type: string
          format: date-time
        completionDateTime:
          description: Date when the order was completed
          type: string
          format: date-time
        requestedStartDate:
          description: Order start date wished by the requestor
          type: string
          format: date-time
        requestedCompletionDate:
          description: Requested delivery date from the requestor perspective
          type: string
          format: date-time
        expectedCompletionDate:
          description: ''
          type: string
          format: date-time
        startDate:
          description: Date when the order was started for processing
          type: string
          format: date-time
        '@baseType':
          description: ''
          type: string
        '@type':
          description: ''
          type: string
        '@schemaLocation':
          description: ''
          type: string
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        orderRelationship:
          type: array
          items:
            $ref: '#/components/schemas/OrderRelationship'
        orderItem:
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrderItem'
        orderMessage:
          type: array
          items:
            $ref: '#/components/schemas/OrderMessage'
    OrderRelationship:
      description: |-
        Linked order to the one containing this attribute.
        This relationship is not used to sort ONAP request.
      required:
        - id
      type: object
      properties:
        type:
          description: 'The type of related order, can be : “dependency” if the order needs to be “not started” until another order item is complete (a service order in this case) or “cross-ref” to keep track of the source order (a productOrder)'
          type: string
        id:
          description: The id of the related order
          type: string
        href:
          description: A hyperlink to the related order
          type: string
        '@referredType':
          description: Type of the referred order.
          type: string
    CreateServiceOrderItem:
      description: |-
        This structure is used in the operation POST for a serviceOrder request to describe an item.
        Attribute description is not accurate and should be find in the serviceOrderItem class.
      required:
        - id
        - service
      type: object
      properties:
        id:
          description: 'Identifier of the line item (generally it is a sequence number 01, 02, 03, …)'
          type: string
        action:
          $ref: '#/components/schemas/ActionType'
        orderItemRelationship:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemRelationship'
        service:
          $ref: '#/components/schemas/Service'
    CreateServiceOrder:
      description: |-
        This structure is used in the operation POST for a serviceOrder request.
        Attribute description is not accurate and should be find in the serviceOrder class.
      type: object
      properties:
        externalId:
          description: ID given by the consumer and only understandable by him (to facilitate his searches)
          type: string
        priority:
          description: 'A way that can be used by consumers to prioritize orders in Service Order Management system (from 0 to 4 : 0 is the highest priority, and 4 the lowest)'
          type: string
        description:
          description: A free-text description of the service order
          type: string
        category:
          description: 'Used to categorize the order that can be useful for the OM system (e.g. “broadband”, “TVOption”, ...)'
          type: string
        requestedStartDate:
          description: Order start date wished by the requestor
          type: string
          format: date-time
        requestedCompletionDate:
          description: Requested delivery date from the requestor perspective
          type: string
          format: date-time
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
        orderRelationship:
          type: array
          items:
            $ref: '#/components/schemas/OrderRelationship'
        orderItem:
          type: array
          items:
            $ref: '#/components/schemas/CreateServiceOrderItem'
    Notification:
      description: Notification structure for a serviceOrdering notification
      required:
        - eventId
        - eventDate
        - eventType
        - event
      type: object
      properties:
        eventId:
          description: ''
          type: string
        eventDate:
          description: ''
          type: string
          format: date-time
        eventType:
          $ref: '#/components/schemas/EventType'
        event:
          $ref: '#/components/schemas/ServiceOrderSummaryWithItem'
    ServiceOrderItemSummary:
      description: Service Order item summary to be used for notification
      required:
        - id
        - service
      type: object
      properties:
        id:
          description: 'Identifier of the line item (generally it is a sequence number 01, 02, 03, …)'
          type: string
        action:
          $ref: '#/components/schemas/ActionType'
        state:
          $ref: '#/components/schemas/ServiceOrderState'
        service:
          $ref: '#/components/schemas/Service'
    ServiceOrderSummaryWithItem:
      description: Service order item summary with item description
      required:
        - id
      type: object
      properties:
        id:
          description: ID created on repository side
          type: string
        href:
          description: Hyperlink to access the order
          type: string
        externalId:
          description: ID given by the consumer and only understandable by him (to facilitate his searches)
          type: string
        state:
          $ref: '#/components/schemas/ServiceOrderState'
        orderDate:
          description: ''
          type: string
          format: date-time
        completionDateTime:
          description: Date when the order was completed
          type: string
          format: date-time
        orderItem:
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrderItemSummary'
    OrderMessage:
      description: An optional array of messages associated with the Order
      required:
        - severity
        - correctionRequired
      type: object
      properties:
        code:
          description: A code associated to this message
          type: string
        field:
          description: Service Order attribute related to this error message
          type: string
        messageInformation:
          description: Message related to this order
          type: string
        severity:
          $ref: '#/components/schemas/SeverityMessage'
        correctionRequired:
          description: Indicator that an action is required to allow service order fullfilment to follow up
          type: boolean