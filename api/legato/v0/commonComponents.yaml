openapi: 3.0.2
info:
  title: Legato Service Common Components
  version: MEF_W99_v0.2.0
  description: >+
    **Legato Service Common Components**
    </p>
     This OAS document contains the schema defintions of common components that
     are reused/referenced by different Legato API specifications.
     This includes common schemas, parameters, responses, headers, etc

tags:
  - name: ServiceCommon
    description: Common schema components used by all Legato APIs.
    
paths: {}
components:
  schemas:
    ActionType:
      description: Action type to be described on the order item.
      type: string
      enum:
        - ADD
        - MODIFY
        - DELETE
        - NO_CHANGE
    
    ApiEntity:
      description: |-
        The base class of all Legato API Entities
      allOf:
        - $ref: '#/components/schemas/ApiEntityMetaData'
        - $ref: '#/components/schemas/ApiEntityRef'
        - type: object
          properties:
            name:
              type: string
              description: |-
                Name of an object instance of this entity class. 
    
    ApiEntityRef:
      description: |-
        The base class of all Legato API Entities
      allOf:
        - $ref: '#/components/schemas/ApiEntityType'
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              description: |-
                Unique identifier of an instance of this entity. The ID is
                invariant and is assigned by SOF. In other words this entity
                will have the same ID throught its lifetime.
            href:
              type: string
              format: uri
              description: |-
                URI reference of an object instance of this entity class.
                
    ApiEntityMetaData:
      description: |-
        The meta data that describes the class type of the API Entity (REST
        resource) instance as well as supports polymorphism and extension
        mechanisms.
      allOf:
        - $ref: '#/components/schemas/ApiEntityType'
        - type: object
          properties:
            '@baseType':
              type: string
              description: |-
                The super/base class type of this REST resource if applicable.
            '@schemaLocation':
              type: string
              format: uri
              description: |-
                Provides a link to the schema describing the REST resource in
                URI format.
    
    ApiEntitySchemaMetaData:
      description: |-
        The metadata that references the schema associated with an API Entity 
        (REST resource) instance.
      allOf:
        - $ref: '#/components/schemas/ApiEntityType'
        - type: object
          required:
            - '@schemaLocation'
          properties:
            '@schemaLocation':
              type: string
              format: uri
              description: |-
                Provides a link to the schema describing the REST resource in
                URI format.  
    
    ApiEntityType:
      description: |-
        The metadata that describes the class type of the API Entity (REST
        resource) instance.
      type: object
      required:
        - '@type'
      properties:
        '@type':
          type: string
          description: |-
            The class type of an instance of Api Entity (REST resource).
                
    Attachment:
      description: |-
        An attachment represents a file that is used to complement the
        description of an entity through video, pictures, etc..
      type: object
      properties:
        description:
          description: A narrative text describing the content of the attachment
          type: string
        mimeType:
          description: 'Attachment type such as video, picture, etc..'
          type: string
    
    DistributionStatus:
      description: |-
        List of possible state for the Distribution Status.
      type: string
      enum:
        - DISTRIBUTION_APPROVED
        - DISTRIBUTION_NOT_APPROVED
        - DISTRIBUTION_REJECTED
        - DISTRIBUTED
        - RETIRED
        
    Service:
      description: |-
        The Service instance managed by SOF and retrievable by an BA over the 
        Legato IRP via the Service Invertory API.
      allOf:
        - $ref: '#/components/schemas/ServiceConfiguration'
        - type: object
          properties:
            supportingResource:
              type: array
              items:
                $ref: '#/components/schemas/SupportingResource'
              minItems: 0
    
    ServiceConfiguration:
      description: |-
        The Service configration information provided-to or retrieved-from SOF
        via an ServiceOrderItem by an BA over Legato IRP..
      allOf:
        - $ref: '#/components/schemas/ApiEntity'
        - type: object
          properties:
            type:
              description: Type of the service - e.g. Access E-Line.
              type: string
            state:
              $ref: '#/components/schemas/ServiceState'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRef'
              minItems: 0
            serviceSpecification:
              type: array
              items:
                $ref: '#/components/schemas/ServiceSpecification'
              minItems: 0
              maxItems: 1
            serviceRelationship:
              $ref: '#/components/schemas/ServiceRelationship'
              
    ServiceRef:
      description: |-
        Reference to a Service instance.
      allOf:
        - $ref: '#/components/schemas/ApiEntityRef'
        - type: object
          properties:
            '@type':
              type: string
              default: 'Service'
              
    ServiceRelationship:
      description: |-
        Reference to an related Service and the type of association.
      type: object
      required:
        - relationshipType
        - service
      properties:
        relationshipType:
          $ref: '#/components/schemas/RelationshipType'
        service:
          $ref: '#/components/schemas/ServiceRef'
           
    ServiceState:
      description: |-
        List of possible state for the Service.
      type: string
      enum:
        - FEASIBILITY_CHECKED
        - DESIGNED
        - RESERVED
        - ACTIVE
        - INACTIVE
        - TERMINATED
        
    OrderMessage:
      description: |-
        Offers the capability to provide additional information about the Order.
      type: object
      properties:
        code:
          description: |-
            A code associated to this message.
          type: string
        field:
          description: |-
            Service Order attribute related to this error message.
          type: string
        messageInformation:
          description: |-
            Additional description text related to this message.
          type: string
        correctionRequired:
          description: |-
            Indicator that an action is required to allow service order
            fullfilment to follow up.
          type: boolean
        severity:
          $ref: '#/components/schemas/SeverityMessage'
          
    ErrorRepresentation:
      description: Representation of an error.
      type: object
      properties:
        code:
          description: |-
            Application related code (as defined in API or from a common list)
          type: integer
          format: int32
        reason:
          description: |-
            Text that explains the reason for error. This can be shown to a
            client user.
          type: string
        message:
          description: |-
            Text that provides more details and corrective actions related to
            the error. This can be shown to a client user.
          type: array
          items:
            type: string
          minItems: 0
          maxItems: 1
        referenceError:
          description: |-
            URL pointing to documentation describing the error.
          type: array
          items:
            type: string
          minItems: 0
          maxItems: 1
        status:
          description: |-
            HTTP error code extension like 400-2.
          type: array
          items:
            type: string
          minItems: 0
          maxItems: 1
          
    RelatedPartyRef:
      description: |-
        A related party defines a party and its role, that is linked to a
        specific entity such as ServiceSpecification, ServiceOrder, Service, etc
      allOf:
        - $ref: '#/components/schemas/ApiEntityRef'
        - type: object
          properties:
            name:
              description: |-
                Name of the related party
              type: string
            role:
              description: |-
                The role of the related party (e.g. Owner, requester).
              type: string
       
    RelationshipType:
      description: Relationship type.
      type: string
      enum:
        - RELIES_ON
        - DEPENDENCY
        - CROSS_REF
     
    SeverityMessage:
      description: Enumerations defining severity.
      type: string
      enum:
        - INFORMATION
        - ERROR
           
    ServiceOrder:
      description: |-
        A Service Order is used to request operations on a Service instance.
        A Service Order groups one or more one Service Order Items - one per
        specific action on a Service instance. The Action associated with the
        Service Order Item describes the operation (add, remove, update) to be
        applied on the specified Service instance.The Service Order Item and
        its associated Action can operate on both existing (remove, update) as
        well as future (add) Service instance.The Service Order is triggered
        from the Business Application (BA) system in charge of the Product Order
        management to the Service Orchestration Function (SOF) system that will
        orchestrate the Service fulfillment.
      allOf:
        - $ref: '#/components/schemas/ServiceOrderConfiguration'
        - type: object
          properties:
            state:
              $ref: '#/components/schemas/ServiceOrderState'
            orderDate:
              description: Date when the order was created.
              type: string
              format: date-time
            startDate:
              description: |-
                Date when the order fulfillment starts
              type: string
              format: date-time
            expectedCompletionDate:
              description: Expected delivery date set by the provider.
              type: string
              format: date-time
            completionDateTime:
              description: Date when the order was completed
              type: string
              format: date-time
            orderMessage:
              type: array
              items:
                $ref: '#/components/schemas/OrderMessage'
              minItems: 0
    
    ServiceOrderConfiguration:
      description: |-
        This structure is used in the operation POST for a serviceOrder request
      allOf:
        - $ref: '#/components/schemas/ApiEntity'
        - type: object
          properties:
            externalId:
              description: |-
                ID given by the consumer and only understandable by client
                (to facilitate client searches)
              type: string
            description:
              description: |-
                A free-text description of the service order
              type: string
            category:
              description: |-
                Used to categorize the order that can be useful for OM system
                (e.g. “broadband”, “TVOption”, ...)'
              type: string
            priority:
              description: |-
                A way that can be used by consumers to prioritize orders in
                Service Order Management system (from 0 to 4 : 0 is the highest
                priority, and 4 the lowest
              type: integer
            requestedStartDate:
              description: |-
                Order start date wished by the requestor
              type: string
              format: date-time
            requestedCompletionDate:
              description: |-
                Requested delivery date from the requestor perspective
              type: string
              format: date-time
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRef'
              minItems: 0
              maxItems: 1
            orderItem:
              type: array
              items:
                $ref: '#/components/schemas/ServiceOrderItem'
              minItems: 0
            orderRelationship:
              type: array
              items:
                $ref: '#/components/schemas/ServiceOrderRelationship'
              minItems: 0
              maxItems: 1
    
    ServiceOrderRef:
      description: |-
        Reference to a Service Order instance.
      allOf:
        - $ref: '#/components/schemas/ApiEntityRef'
        - type: object
          properties:
            '@type':
              type: string
              default: 'ServiceOrder'
                   
    ServiceOrderRelationship:
      description: |-
        Reference to an related Service Order and the type of association.
      type: object
      required:
        - relationshipType
        - serviceOrder
      properties:
        relationshipType:
          $ref: '#/components/schemas/RelationshipType'
        serviceOrder:
           $ref: '#/components/schemas/ServiceOrderRef'
           
    ServiceOrderState:
      description: |-
        List of possible state for the Service Order. 
        * ACKNOWLEDGED - Order has been received and has passed message
          validation.
        * IN_PROGRESS - Service Fulfillment has started.
        * PENDING - Order is currently in a waiting stage for an explicitly
          action/activity to be completed before the order can progress further,
          pending order amend or cancel assessment. A pending stage can lead
          into auto cancellation of an order, if no action is take within the
          defined timeframes to be described under the Agreement.
        * HELD - Order cannot be progressed due to a temporary issue. For
          example, processing is temporarily delayed to resolve an
          infrastructure shortfall to facilitate supply of order. Upon
          resolution of the issue, the order will continue to progress.
        * CANCELLED - In-Flight Order has been successfully cancelled.
        * COMPLETED - Provisioning completed and the Service is now active.
        * FAILED - All of the Order items have failed which results in the
          entire Order to be Failed.
        * PARTIAL - Some of the Order items processing have failed and some have
          succeeded so the entire Order is in a Partial state. This provides
          support for partial Failure of an Order.
        * REJECTED - An order failed the Order Feasibility checks. Service
          technical eligibility is not done throught service order API but with
          dedicated serviceQualification API (from preOrdering domain) invalid
          information is provided through the order request. The order request
          fails to meet business rules for ordering.
      type: string
      enum:
        - ACKNOWLEDGED
        - IN_PROGRESS
        - PENDING
        - HELD
        - CANCELLED
        - COMPLETED
        - FAILED
        - PARTIAL
        - REJECTED
        
    ServiceOrderItem:
      description: |-
        An identified part of the order. A service order is decomposed into one
        or more order items.
      allOf:
        - $ref: '#/components/schemas/ServiceOrderItemConfiguration'
        - type: object
          properties:
            state:
              $ref: '#/components/schemas/ServiceOrderState'
            orderItemMessage:
              type: array
              items:
                $ref: '#/components/schemas/OrderMessage'
              minItems: 0
            percentProgress:
              description: Progress of the delivery in percentage.
              type: integer
        
    ServiceOrderItemConfiguration:
      description: |-
        This structure is used in the operation POST for a serviceOrder request
        to describe an item.
      required:
        - id
        - service
      type: object
      properties:
        id:
          description: |-
            Identifier of the line item (generally it is a sequence number
            01, 02, 03, …)
          type: string
        action:
          $ref: '#/components/schemas/ActionType'
        service:
          $ref: '#/components/schemas/Service'
        orderItemRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrderItemRelationship'
          minItems: 0
          maxItems: 1
    
    ServiceOrderItemRef:
      description: |-
        Reference to a Service Order Item instance.
      allOf:
        - $ref: '#/components/schemas/ApiEntityRef'
        - type: object
          properties:
            '@type':
              type: string
              default: 'ServiceOrderItem' 
              
    ServiceOrderItemRelationship:
      description: |-
        Reference to an related Service Order Item and the type of association.
      type: object
      required:
        - relationshipType
        - serviceOrder
      properties:
        relationshipType:
          $ref: '#/components/schemas/RelationshipType'
        serviceOrder:
           $ref: '#/components/schemas/ServiceOrderItemRef'
           
    ServiceSpecification:
      description: |-
        ServiceSpecification offers the ability to describe the characteristics
        of a specific type of service. Functionally, it acts as a template by
        which Services may be instantiated. By sharing the same specification,
        these services would therefore share the same set of characteristics.
      allOf:
        - $ref: '#/components/schemas/ServiceSpecificationRef'
        - type: object
          properties:
            category:
              description: |-
                The category is used to group service specifications in logical
                containers. Categories can be further sub-categorized into other
                categories.
              type: string
            subcategory:
              description: |-
                Categories can be further sub-categorized into other categories.
              type: string
            description:
              description: |-
                A narrative that explains  details of the service specification.
              type: string
            lifecycleStatus:
              $ref: '#/components/schemas/ServiceSpecificationState'
            distributionStatus:
              $ref: '#/components/schemas/DistributionStatus'
            attachment:
              type: array
              items:
                $ref: '#/components/schemas/Attachment'
              minItems: 0
              maxItems: 1
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRef'
              minItems: 0 
    
    ServiceSpecificationState:
      description: |-
        List of possible state for the Service Specification.
      type: string
      enum:
        - NOT_CERTIFIED_CHECKOUT
        - NOT_CERTIFIED_CHECKIN
        - READY_FOR_CERTIFICATION
        - CERTIFICATION_IN_PROGRESS
        - CERTIFIED
        - REJECTED
        
    ServiceSpecificationRef:
      description: |-
        Reference to a ServiceSpecification instance.
      allOf:
        - $ref: '#/components/schemas/ApiEntityRef'
        - type: object
          properties:
            version:
              description: Service specification version.
              type: string
            targetServiceSchema:
              $ref: '#/components/schemas/ApiEntitySchemaMetaData'
                
    SupportingResource:
      description: |-
        Provides reference to the Resource supporting the Service instance.
      allOf:
        - $ref: '#/components/schemas/ApiEntity'
        - type: object
          properties:
            role:
              description: Role provide by SupportingResource.
              type: string